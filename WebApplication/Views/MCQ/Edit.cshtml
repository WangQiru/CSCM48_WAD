@model WebApplication.ViewModels.QuestionOptionViewModel
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<div class="row">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="col-xs-12 col-sm-6 col-md-6 col-xs-offset-2 col-sm-offset-0 col-md-offset-0 col-lg-offset-0">
            <div class="form-horizontal">
                <h4>MCQ</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.MCQModels.ID)

                <div class="form-group">
                    @Html.LabelFor(model => model.MCQModels.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MCQModels.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MCQModels.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MCQModels.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MCQModels.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MCQModels.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MCQModels.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MCQModels.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MCQModels.ReleaseDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MCQModels.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MCQModels.DueDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MCQModels.DueDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-success" />
                    </div>
                </div>
            </div>
        </div>

    }


    <div class="col-xs-10 col-sm-6 col-md-6 col-xs-offset-2 col-sm-offset-0 col-md-offset-0 col-lg-offset-0">
        <div class="form-horizontal">
            <h4>Questions</h4>
            <hr />
            <table id="questionTable" class="table table-fixed header-fixed">
                <tbody id="questionTableBody">
                    @{
                        int counter = 1;
                    }

                    @foreach (var question in Model.QuestionModelsList)
                    {
                        <tr class="@counter">
                            <td>
                                Question @counter :<span id="@counter">@question.Text</span>
                                @Html.TextBox("updateQuestion" + @counter, (string)@question.Text, new { @class = "form-control", @type = "hidden", @rowno = @counter })
                                <div class="modal fade" id="optionModal-@counter" tabindex="-1" role="dialog" aria-labelledby="optionModal">
                                    <div class="modal-dialog" role="document">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                                <h4 class="modal-title" id="myModalLabel">Options for question @counter</h4>
                                            </div>
                                            <div class="modal-body">
                                                <p>Check correct option</p>

                                                @{
                                                    int optionCount = 1;
                                                    for (int i = 0; i < Model.QuestionModelsList[counter - 1].OptionsModelsList.Count; i += 2)
                                                    {
                                                        <label for="Option-@Model.QuestionModelsList[counter - 1].OptionsModelsList[i].ID" class="control-label col-md-3">@Html.CheckBoxFor(model => model.QuestionModelsList[counter - 1].OptionsModelsList[i].correct,new { @class = "optionCorrectCheckbox", @id = "optionCorrectCheckbox-" + @Model.QuestionModelsList[counter - 1].OptionsModelsList[i].ID, @optionCount = @optionCount }) Option @optionCount</label>
                                                        @Html.TextBox("Option-" + @Model.QuestionModelsList[counter - 1].OptionsModelsList[i].ID, (string)@Model.QuestionModelsList[counter - 1].OptionsModelsList[i].Text, new { @class = "form-control optionInput", @optionID = @Model.QuestionModelsList[counter - 1].OptionsModelsList[i].ID, @optionCount = @optionCount })
                                                        optionCount++;
                                                        <br />
                                                    }
                                                }
                                            </div>
                                            <div class="modal-footer">
                                                <span class="text-danger optionModifyMessage" id="optionModifyMessage-@counter"></span>
                                                <button type="button" class="btn btn-success updateOptionSubmit" rowno="@counter" id="updateOption-@counter">Update</button>
                                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr class="@counter">
                            <td>
                                <a class="btn btn-sm btn-info updateQuestion" id="updateQuestion-@counter" rowno="@counter" value="@question.ID">Edit</a>
                                <a class="btn btn-sm btn-success updateQuestionSubmit" id="updateQuestionSubmit-@counter" rowno="@counter" value="@question.ID" style="display:none">Update</a>
                                <a class="btn btn-sm btn-primary" data-toggle="modal" data-target="#optionModal-@counter">View Options</a>
                                <a href="#" class="btn btn-sm btn-danger" title="Confirmation" data-toggle="popover" data-placement="right" data-trigger="focus" data-html="true" data-content='<a class="btn btn-sm btn-danger deleteQuestion" rowno="@counter" value="@question.ID">Yes</a><a class="btn btn-sm btn-success popoverClose pull-right" >No</a>'>Delete</a>
                                <span class="text-danger questionModifyMessage" id="questionModifyMessage-@counter"></span>
                            </td>
                        </tr>
                                                        counter++;
                                                    }
                </tbody>
            </table>
            <br />
        </div>

        <div class="col-md-10">
            <div class="row newQuestion">
                @Html.TextBox("newQuestion", null, new { @class = "form-control valid v-align", placeholder = "Enter new question", data_val = "true", data_val_required = "Question is required" })
                <a href="#" id="newQuestionPopover" class="btn btn-success v-align">Add</a>
                <br /><span id="newQuestionValidation" class="text-danger" style="display:none">Question is required</span>
            </div>
        </div>
    </div>
</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var counter=@counter;
        $(function () {
            $('[data-toggle="popover"]').popover();
            function OptionModels(){
                var self= this;
                self.MCQID = @Html.Raw(Json.Encode(Model.MCQModels.ID));
                self.Text = $('#newQuestion').val();
            }

            $('#questionTableBody').on("click", ".deleteQuestion", function() {
                var data = {id: $(this).attr('value'),__RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()};
                var rowno=$(this).attr('rowno');
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("AjaxDelete", "Question")",
                    data: data,
                    success: function (res) {
                        QuestionModified("delete",rowno);
                    }
                });
            });

            $('#questionTableBody,#newQuestion').on("click", ".popoverClose", function() {
                $(this).popover('hide');
            });

            $('.newQuestion').on("click", ".popoverClose", function() {
                $('#newQuestionPopover').popover('disable').popover("hide");
            });


            $('#newQuestionPopover').click(function(){
                if($('#newQuestion').val()==""){
                    $('#newQuestionValidation').show();
                    $('#newQuestion').focus();
                    $('#newQuestionPopover').popover('disable').popover("hide");
                }
                else{
                    $('#newQuestionValidation').hide();
                    $('#newQuestionPopover').popover({
                        placement:'right',
                        trigger:'focus',
                        html:true,
                        title:"Confirmation",
                        content:'<a class="btn btn-sm btn-danger submitNewQuestion" id="submitNewQuestion" type="submit">Yes</a><a class="btn btn-success btn-sm popoverClose pull-right" >No</a>'
                    });
                    $('#newQuestionPopover').popover('enable').popover('show');
                }

            });


            $('.newQuestion').on("click", "#submitNewQuestion", function() {
                var questionModels=new QuestionModels();
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("AjaxCreate", "Question")",
                    data: {questionModels,__RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()},
                    success: function (res) {
                        $("#questionTable").find('tbody').append($('<tr>').append($('<td>').text('Question ' + counter))).append($('<tr>').append($('<td>').text($('#newQuestion').val()))).append($('<tr>').append($('<td>').text("Refresh to edit or delete.")));
                        counter++;
                        $('#questionTableBody').animate({scrollTop: 1E10}, 1000);
                        $('#newQuestion').val("");
                    }
                });
            });


            $('.updateQuestion').click(function(){
                var rowno=$(this).attr('rowno');
                $(this).hide();
                $('#updateQuestionSubmit-'+rowno).show();
                $('#updateQuestion'+rowno).attr('type','');
            });


            $('.updateQuestionSubmit').click(function(){
                var button=$(this);
                var rowno=$(this).attr('rowno');

                if($('#updateQuestion'+rowno).val()==$('span#'+rowno).text())
                {
                    $('#updateQuestion'+rowno).attr('type','hidden');
                    $('#updateQuestionSubmit-'+rowno).hide();
                    $('#updateQuestion-'+rowno).show();
                    QuestionModified("nochange",rowno);
                }

                else{

                    var data = {id: $(this).attr('value'),text:$('#updateQuestion'+rowno).val(),__RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()};
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("AjaxUpdate", "Question")",
                        data: data,
                        success: function (res) {
                            $('span#'+rowno).text($('#updateQuestion'+rowno).val());
                            $('#updateQuestion'+rowno).attr('type','hidden');
                            $('#updateQuestionSubmit-'+rowno).hide();
                            $('#updateQuestion-'+rowno).show();
                            QuestionModified("update",rowno);
                        }

                    });
                }
            });
        });

        function QuestionModified(type,rowno){
            $('.questionModifyMessage').hide();
            if(type=="delete"){
                $('#questionModifyMessage-'+rowno).text("Question deleted successfully.").show().fadeOut(2000,function(){  $('tr.'+rowno).hide('slow'), function(){ $('tr.'+rowno).remove(); } });
            }
            else if(type=="update"){
                $('#questionModifyMessage-'+rowno).text("Question updated successfully.").show().fadeOut(2000);
            }
            else if(type=="nochange"){
                $('#questionModifyMessage-'+rowno).text("No change was made.").show().fadeOut(2000);
            }
        }

    </script>

    <script>
        $(function () {
            var one = two = three = four = changed = false;

            var modal;


            
            $('.optionCorrectCheckbox').click(function(){
                $('.optionCorrectCheckbox').prop('checked', false);
                $(this).prop('checked', true);
                changed = true;
                one = two = three = four=true;
            });

            $('.updateOptionSubmit').click(function(){
                var button=$(this);
                var rowno=$(this).attr('rowno');
                modal=$('#optionModal-'+rowno);

                modal.on("click", ".popoverClose", function() {
                    $('#updateOption-'+rowno).popover('disable').popover("hide");
                });

                if(modal.find('.optionInput[optioncount="1"]').val() != modal.find('.optionInput[optioncount="1"]').attr('value'))
                {
                    one = true;
                }

                if(modal.find('.optionInput[optioncount="2"]').val() != modal.find('.optionInput[optioncount="2"]').attr('value'))
                {
                    two = true;
                }

                if(modal.find('.optionInput[optioncount="3"]').val() != modal.find('.optionInput[optioncount="3"]').attr('value'))
                {
                    three = true;
                }

                if(modal.find('.optionInput[optioncount="4"]').val() != modal.find('.optionInput[optioncount="4"]').attr('value'))
                {
                    four = true;
                }

                if(one || two || three || four)
                    changed = true;

                if(changed){
                    $('#updateOption-'+rowno).popover({
                        placement:'right',
                        trigger:'focus',
                        html:true,
                        title:"Confirmation",
                        content:'<a class="btn btn-sm btn-danger submitOptions" id="submitOptions" type="submit">Yes</a><a class="btn btn-success btn-sm popoverClose pull-right" >No</a>'
                    });
                    $('#updateOption-'+rowno).popover('enable').popover('show');
                }
                else{
                    OptionModified("nochange",rowno);
                }
            });


            $('.modal').on("click", "#submitOptions", function() {
                if(one){
                    var option=modal.find('.optionInput[optioncount="1"]');
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("AjaxUpdate", "Option")",
                        data: {text:option.val(),id:option.attr('optionid'),correct:$('#optionCorrectCheckbox-'+option.attr('optionid')).prop('checked'),__RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()},
                        success: function (res) {
                            one = false;
                            option.attr('value',option.val());
                            OptionModified("update",1);
                        }
                    });
                }

                if(two){
                    var option=modal.find('.optionInput[optioncount="2"]');
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("AjaxUpdate", "Option")",
                        data: {text:option.val(),id:option.attr('optionid'),correct:$('#optionCorrectCheckbox-'+option.attr('optionid')).prop('checked'),__RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()},
                        success: function (res) {
                            two = false;
                            option.attr('value',option.val());
                            OptionModified("update",1);
                        }
                    });
                }

                if(three){
                    var option=modal.find('.optionInput[optioncount="3"]');
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("AjaxUpdate", "Option")",
                        data: {text:option.val(),id:option.attr('optionid'),correct:$('#optionCorrectCheckbox-'+option.attr('optionid')).prop('checked'),__RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()},
                        success: function (res) {
                            three = false;
                            option.attr('value',option.val());
                            OptionModified("update",1);
                        }
                    });
                }

                if(four){
                    var option=modal.find('.optionInput[optioncount="4"]');
                    console.log($('#optionCorrectCheckbox-'+option.attr('optionid')).prop('checked'));
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("AjaxUpdate", "Option")",
                        data: {text:option.val(),id:option.attr('optionid'),correct:$('#optionCorrectCheckbox-'+option.attr('optionid')).prop('checked'),__RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()},
                        success: function (res) {
                            four = false;
                            option.attr('value',option.val());
                            OptionModified("update",1);
                        }
                    });
                }


            });

            

            function OptionModified(type,id){
                $('.optionModifyMessage').hide();
                if(type=="update"){
                    if(!one && !two && !three && !four){
                        $('.optionModifyMessage').text("Option updated successfully.").show().fadeOut(2000);
                        $('.updateOptionSubmit').popover('disable').popover("hide");
                        changed = false;
                    }
                }
                else if(type=="nochange"){
                    $('#optionModifyMessage-'+id).text("No change was made.").show().fadeOut(2000);
                }
            }
        });



    </script>
}
