@model WebApplication.Models.QuestionModels

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="col-xs-12 col-sm-12 col-md-12 col-xs-offset-2 col-sm-offset-0 col-md-offset-0 col-lg-offset-0">
        <div class="form-horizontal">
            <h4>Question</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)

            <div class="form-group">
                @Html.LabelFor(model => model.MCQID, "MCQ Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <h5>
                        @Html.DisplayFor(model => model.MCQModels.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @foreach (var id in ViewBag.MCQID)
                        {
                            <a href="/MCQ/Edit/@id.Value" class="btn btn-sm btn-info">View MCQ</a>
                        }
                        @Html.EditorFor(model => model.MCQID, new { htmlAttributes = new { @type = "hidden" } })
                    </h5>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Text, "Question", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-success" />
                </div>
            </div>
        </div>
        </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
